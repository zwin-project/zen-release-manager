#! /bin/sh

cd $(dirname "$0") || exit

PROG_NAME=$(basename "$0")
export PROJECT_ROOT=$(pwd)

show_help() {
  echo "    [Usage] $PROG_NAME <command> [option]"
  echo ""
  echo "    COMMAND:"
  echo "        configure <release.yaml> : Configure build"
  echo "        download modules...      : Download"
  echo "        build module...          : Build"
  echo "        install module...        : Install"
  echo "        uninstall module...      : Unistall"
  echo "        clean                    : Clean build directory"
  echo "        generate-config          : Create default config file"
  echo "        help                     : Show this help text"
  echo ""
  echo "    MODULE:"
  echo "        protocol                 : Zwin protocol"
  echo "        deps | dependeincies     : Dependencies"
  echo "        desktop                  : Desktop environment"
  echo "        zen-mirror               : Zen Mirror"
}

success() {
  echo ""
  echo "==========================="
  echo "         succeeded"
  echo "==========================="
  echo ""
  exit 0;
}

configure() {
  RELEASE_YAML="$1"
  if [ "$RELEASE_YAML" = "" ]; then
    show_help
    exit 1
  fi

  . tools/common.sh
  execute ./tools/configure "$RELEASE_YAML" "$BUILD_DIR"
  success
}

read_module() {
  while :; do
    case $1 in
      protocol)
        export MODULE_PROTOCOL=1
        ;;
      deps|dependeincies)
        export MODULE_DEPS=1
        ;;
      desktop)
        export MODULE_DESKTOP=1
        ;;
      zen-mirror)
        export MODULE_ZEN_MIRROR=1
        ;;
      *)
        show_help
        exit 1
        ;;
    esac

    shift

    if [ $# = 0 ]; then
      break
    fi
  done
}

build() {
  read_module "$@"

  . tools/build.sh
  success
}

install() {
  read_module "$@"

  . tools/install.sh
  success
}

download() {
  read_module "$@"

  . tools/download.sh
  success
}

uninstall() {
  . ./tools/uninstall.sh
  success
}

clean() {
  . ./tools/clean.sh
  success
}

generate_config() {
  config_dir="$XDG_CONFIG_HOME"
  [ -z "$config_dir" ] && config_dir="$HOME/.config"
  config_dir="$config_dir/zen-desktop"
  mkdir -p "$config_dir"

  file_name="config.toml"
  while true; do
    [ ! -e "$config_dir/$file_name" ] && break
    file_name="$file_name.bak"
  done
  [ -e "$config_dir/config.toml" ] && mv "$config_dir/config.toml" "$config_dir/$file_name"

  echo "Generated $config_dir/config.toml"
  echo
  . ./tools/generate-config.sh | tee "$config_dir/config.toml"
  success
}

case $1 in
  configure)
    configure "$2"
    ;;
  download)
    shift
    download "$@"
    ;;
  build)
    shift
    build "$@"
    ;;
  install)
    shift
    install "$@"
    ;;
  uninstall)
    uninstall
    ;;
  clean)
    clean
    ;;
  generate-config)
    generate_config
    ;;
  help|-h|--help)
    show_help
    exit 0
    ;;
  *)
    show_help
    exit 1
    ;;
esac

